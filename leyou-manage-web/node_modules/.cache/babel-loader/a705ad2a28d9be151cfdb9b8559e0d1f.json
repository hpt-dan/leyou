{"remainingRequest":"E:\\Code\\project\\leyou-manage-web\\node_modules\\babel-loader\\lib\\index.js!E:\\Code\\project\\leyou-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js!E:\\Code\\project\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Code\\project\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Code\\project\\leyou-manage-web\\src\\views\\item\\GoodsForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Code\\project\\leyou-manage-web\\src\\views\\item\\GoodsForm.vue","mtime":1557195980426},{"path":"E:\\Code\\project\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Code\\project\\leyou-manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Code\\project\\leyou-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"E:\\Code\\project\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Code\\project\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$keys from \"E:\\\\Code\\\\project\\\\leyou-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/keys\";\nimport _Map from \"E:\\\\Code\\\\project\\\\leyou-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/map\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _Object$assign from \"E:\\\\Code\\\\project\\\\leyou-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport _JSON$stringify from \"E:\\\\Code\\\\project\\\\leyou-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport _Object$values from \"E:\\\\Code\\\\project\\\\leyou-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/values\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectWithoutProperties from \"E:\\\\Code\\\\project\\\\leyou-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"E:\\\\Code\\\\project\\\\leyou-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"goods-form\",\n  props: {\n    oldGoods: {\n      type: Object\n    },\n    isEdit: {\n      type: Boolean,\n      default: false\n    },\n    step: {\n      type: Number,\n      default: 1\n    }\n  },\n  data: function data() {\n    return {\n      valid: false,\n      goods: {\n        categories: [],\n        // 商品分类信息\n        brandId: 0,\n        // 品牌id信息\n        name: \"\",\n        // 标题\n        subTitle: \"\",\n        // 子标题\n        spuDetail: {\n          packingList: \"\",\n          // 包装列表\n          afterService: \"\",\n          // 售后服务\n          description: \"\" // 商品描述\n\n        }\n      },\n      brandOptions: [],\n      // 品牌列表\n      specs: [],\n      // 规格参数的模板\n      specialSpecs: [] // 特有规格参数模板\n\n    };\n  },\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      // 表单校验。\n      if (!this.$refs.basic.validate) {\n        this.$message.error(\"请先完成表单内容！\");\n      } // 先处理goods，用结构表达式接收,除了categories外，都接收到goodsParams中\n\n\n      var _this$goods = this.goods,\n          _this$goods$categorie = _slicedToArray(_this$goods.categories, 3),\n          cid1 = _this$goods$categorie[0].id,\n          cid2 = _this$goods$categorie[1].id,\n          cid3 = _this$goods$categorie[2].id,\n          goodsParams = _objectWithoutProperties(_this$goods, [\"categories\"]); // 处理规格参数\n\n\n      var specs = {};\n      this.specs.forEach(function (_ref) {\n        var id = _ref.id,\n            v = _ref.v;\n        specs[id] = v;\n      }); // 处理特有规格参数模板\n\n      var specTemplate = {};\n      this.specialSpecs.forEach(function (_ref2) {\n        var id = _ref2.id,\n            options = _ref2.options;\n        specTemplate[id] = options;\n      }); // 处理sku\n\n      var skus = this.skus.filter(function (s) {\n        return s.enable;\n      }).map(function (_ref3) {\n        var price = _ref3.price,\n            stock = _ref3.stock,\n            enable = _ref3.enable,\n            images = _ref3.images,\n            indexes = _ref3.indexes,\n            rest = _objectWithoutProperties(_ref3, [\"price\", \"stock\", \"enable\", \"images\", \"indexes\"]);\n\n        // 标题，在spu的name基础上，拼接特有规格属性值\n        var title = goodsParams.name + \" \" + _Object$values(rest).map(function (v) {\n          return v.v;\n        }).join(\" \");\n\n        var obj = {};\n\n        _Object$values(rest).forEach(function (v) {\n          obj[v.id] = v.v;\n        });\n\n        return {\n          price: _this.$format(price),\n          // 价格需要格式化\n          stock: stock,\n          indexes: indexes,\n          enable: enable,\n          title: title,\n          // 基本属性\n          images: images ? images.join(\",\") : '',\n          // 图片\n          ownSpec: _JSON$stringify(obj) // 特有规格参数\n\n        };\n      });\n\n      _Object$assign(goodsParams, {\n        cid1: cid1,\n        cid2: cid2,\n        cid3: cid3,\n        // 商品分类\n        skus: skus // sku列表\n\n      });\n\n      goodsParams.spuDetail.genericSpec = _JSON$stringify(specs);\n      goodsParams.spuDetail.specialSpec = _JSON$stringify(specTemplate);\n      this.$http({\n        method: this.isEdit ? \"put\" : \"post\",\n        url: \"/item/goods\",\n        data: goodsParams\n      }).then(function () {\n        // 成功，关闭窗口\n        _this.$emit(\"close\"); // 提示成功\n\n\n        _this.$message.success(\"保存成功了\");\n      }).catch(function () {\n        _this.$message.error(\"保存失败！\");\n      });\n    }\n  },\n  watch: {\n    oldGoods: {\n      deep: true,\n      handler: function handler(val) {\n        if (!this.isEdit) {\n          _Object$assign(this.goods, {\n            categories: null,\n            // 商品分类信息\n            brandId: 0,\n            // 品牌id信息\n            name: \"\",\n            // 标题\n            subTitle: \"\",\n            // 子标题\n            spuDetail: {\n              packingList: \"\",\n              // 包装列表\n              afterService: \"\",\n              // 售后服务\n              description: \"\" // 商品描述\n\n            }\n          });\n\n          this.specs = [];\n          this.specialSpecs = [];\n        } else {\n          this.goods = Object.deepCopy(val); // 先得到分类名称\n\n          var names = val.categoryName.split(\"/\");\n          delete this.goods.categoryName;\n          delete this.goods.brandName;\n          delete this.goods.createTime;\n          delete this.goods.saleable; // 组织商品分类数据\n\n          this.goods.categories = [{\n            id: val.cid1,\n            name: names[0]\n          }, {\n            id: val.cid2,\n            name: names[1]\n          }, {\n            id: val.cid3,\n            name: names[2]\n          }]; // 将skus处理成map\n\n          var skuMap = new _Map();\n          this.goods.skus.forEach(function (s) {\n            s.enable = true;\n            skuMap.set(s.indexes, s);\n          });\n          this.goods.skus = skuMap;\n        }\n      }\n    },\n    \"goods.categories\": {\n      deep: true,\n      handler: function handler(val) {\n        var _this2 = this;\n\n        // 判断商品分类是否存在，存在才查询\n        if (val && val.length > 0) {\n          // 根据分类查询品牌\n          this.$http.get(\"/item/brand/of/category?id=\" + this.goods.categories[2].id).then(function (_ref4) {\n            var data = _ref4.data;\n            _this2.brandOptions = data;\n          }); // 根据分类查询规格参数\n\n          this.$http.get(\"/item/spec/params?cid=\" + this.goods.categories[2].id).then(function (_ref5) {\n            var data = _ref5.data;\n            var specs = [];\n            var template = [];\n\n            if (_this2.isEdit) {\n              specs = JSON.parse(_this2.goods.spuDetail.genericSpec);\n              template = JSON.parse(_this2.goods.spuDetail.specialSpec);\n            } // 对特有规格进行筛选\n\n\n            var arr1 = [];\n            var arr2 = [];\n            data.forEach(function (_ref6) {\n              var id = _ref6.id,\n                  name = _ref6.name,\n                  generic = _ref6.generic,\n                  numeric = _ref6.numeric,\n                  unit = _ref6.unit;\n\n              if (generic) {\n                var o = {\n                  id: id,\n                  name: name,\n                  numeric: numeric,\n                  unit: unit\n                };\n\n                if (_this2.isEdit) {\n                  o.v = specs[id];\n                }\n\n                arr1.push(o);\n              } else {\n                var _o = {\n                  id: id,\n                  name: name,\n                  options: []\n                };\n\n                if (_this2.isEdit) {\n                  _o.options = template[id];\n                }\n\n                arr2.push(_o);\n              }\n            });\n            _this2.specs = arr1; // 通用规格\n\n            _this2.specialSpecs = arr2; // 特有规格\n          });\n        }\n      }\n    }\n  },\n  computed: {\n    skus: function skus() {\n      var _this3 = this;\n\n      // 过滤掉用户没有填写数据的规格参数\n      var arr = this.specialSpecs.filter(function (s) {\n        return s.options.length > 0;\n      }); // 通过reduce进行累加笛卡尔积\n\n      return arr.reduce(function (last, spec, index) {\n        var result = [];\n        last.forEach(function (o) {\n          spec.options.forEach(function (option, i) {\n            var obj = JSON.parse(_JSON$stringify(o));\n            obj[spec.name] = {\n              v: option,\n              id: spec.id\n            };\n            obj.indexes = (obj.indexes || '') + '_' + i;\n\n            if (index === arr.length - 1) {\n              obj.indexes = obj.indexes.substring(1); // 如果发现是最后一组，则添加价格、库存等字段\n\n              _Object$assign(obj, {\n                price: 0,\n                stock: 0,\n                enable: false,\n                images: []\n              });\n\n              if (_this3.isEdit) {\n                // 如果是编辑，则回填sku信息\n                var sku = _this3.goods.skus.get(obj.indexes);\n\n                if (sku != null) {\n                  var price = sku.price,\n                      stock = sku.stock,\n                      enable = sku.enable,\n                      images = sku.images;\n\n                  _Object$assign(obj, {\n                    price: _this3.$format(price),\n                    stock: stock,\n                    enable: enable,\n                    images: images ? images.split(\",\") : []\n                  });\n                }\n              }\n            }\n\n            result.push(obj);\n          });\n        });\n        return result;\n      }, [{}]);\n    },\n    headers: function headers() {\n      if (this.skus.length <= 0) {\n        return [];\n      }\n\n      var headers = [];\n\n      _Object$keys(this.skus[0]).forEach(function (k) {\n        var value = k;\n\n        if (k === \"price\") {\n          // enable，表头要翻译成“价格”\n          k = \"价格\";\n        } else if (k === \"stock\") {\n          // enable，表头要翻译成“库存”\n          k = \"库存\";\n        } else if (k === \"enable\") {\n          // enable，表头要翻译成“是否启用”\n          k = \"是否启用\";\n        } else if (k === \"images\" || k === 'indexes') {\n          // 图片和索引不在表格中展示\n          return;\n        }\n\n        headers.push({\n          text: k,\n          align: \"center\",\n          sortable: false,\n          value: value\n        });\n      });\n\n      return headers;\n    }\n  }\n};",{"version":3,"sources":["GoodsForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-stepper v-model=\"step\">\r\n    <v-stepper-header>\r\n      <v-stepper-step :complete=\"step > 1\" step=\"1\">基本信息</v-stepper-step>\r\n      <v-divider/>\r\n      <v-stepper-step :complete=\"step > 2\" step=\"2\">商品描述</v-stepper-step>\r\n      <v-divider/>\r\n      <v-stepper-step :complete=\"step > 3\" step=\"3\">规格参数</v-stepper-step>\r\n      <v-divider/>\r\n      <v-stepper-step step=\"4\">SKU属性</v-stepper-step>\r\n    </v-stepper-header>\r\n    <v-stepper-items>\r\n      <!--1、基本信息-->\r\n      <v-stepper-content step=\"1\">\r\n        <v-flex class=\"xs10 mx-auto\">\r\n          <v-form v-model=\"valid\" ref=\"basic\">\r\n            <v-layout row>\r\n              <v-flex xs5>\r\n                <!--商品分类-->\r\n                <v-cascader\r\n                  url=\"/item/category/of/parent\"\r\n                  required\r\n                  showAllLevels\r\n                  v-model=\"goods.categories\"\r\n                  label=\"请选择商品分类\"/>\r\n              </v-flex>\r\n              <v-spacer/>\r\n              <v-flex xs5>\r\n                <!--品牌-->\r\n                <v-autocomplete\r\n                  :items=\"brandOptions\"\r\n                  item-text=\"name\"\r\n                  item-value=\"id\"\r\n                  label=\"所属品牌\"\r\n                  v-model=\"goods.brandId\"\r\n                  required\r\n                  autocomplete\r\n                  clearable\r\n                  dense chips\r\n                  :rules=\"[v => !!v || '品牌不能为空']\"\r\n                >\r\n                  <template slot=\"selection\" slot-scope=\"data\">\r\n                    <v-chip small>{{ data.item.name}}</v-chip>\r\n                  </template>\r\n                </v-autocomplete>\r\n              </v-flex>\r\n            </v-layout>\r\n            <v-text-field label=\"商品名称\" v-model=\"goods.name\" :counter=\"200\" required :rules=\"[v => !!v || '商品标题不能为空']\" hide-details/>\r\n            <v-text-field label=\"商品卖点（副标题）\" v-model=\"goods.subTitle\" :counter=\"200\" hide-details/>\r\n            <v-textarea label=\"包装清单\" v-model=\"goods.spuDetail.packingList\" :counter=\"1000\" :rows=\"3\" hide-details/>\r\n            <v-textarea label=\"售后服务\" v-model=\"goods.spuDetail.afterService\" :counter=\"1000\" :rows=\"3\" hide-details/>\r\n          </v-form>\r\n        </v-flex>\r\n      </v-stepper-content>\r\n      <!--2、商品描述-->\r\n      <v-stepper-content step=\"2\">\r\n        <v-editor v-model=\"goods.spuDetail.description\" url=\"/upload/signature\" needSignature/>\r\n      </v-stepper-content>\r\n      <!--3、规格参数-->\r\n      <v-stepper-content step=\"3\">\r\n        <v-flex class=\"xs10 mx-auto px-3\">\r\n          <!--遍历整个规格参数-->\r\n          <v-card class=\"my-2\">\r\n            <v-container grid-list-md fluid>\r\n            <v-layout wrap row justify-space-between class=\"px-5\">\r\n              <v-flex xs12 sm5 v-for=\"param in specs\" :key=\"param.name\">\r\n                <v-text-field :label=\"param.name\" v-model=\"param.v\" :suffix=\"param.unit || ''\"\r\n                 />\r\n              </v-flex>\r\n            </v-layout>\r\n          </v-container>\r\n          </v-card>\r\n        </v-flex>\r\n      </v-stepper-content>\r\n      <!--4、SKU属性-->\r\n      <v-stepper-content step=\"4\">\r\n        <v-flex class=\"mx-auto\">\r\n          <!--遍历特有规格参数-->\r\n          <v-card flat v-for=\"spec in specialSpecs\" :key=\"spec.name\">\r\n            <!--特有参数的标题-->\r\n            <div class=\"subheading\">{{spec.name}}:</div>\r\n            <!--特有参数的待选项，需要判断是否有options，如果没有，展示文本框，让用户自己输入-->\r\n            <v-card-text class=\"px-5\">\r\n              <div v-for=\"i in spec.options.length+1\" :key=\"i\" class=\"layout row px-5\">\r\n                <v-text-field :placeholder=\"'新的' + spec.name + ':'\" class=\"flex xs10\" auto-grow\r\n                              v-model=\"spec.options[i-1]\" v-bind:value=\"i\" single-line hide-details/>\r\n\r\n                <v-btn @click=\"spec.options.splice(i-1,1)\" v-if=\"i <= spec.options.length\" icon>\r\n                  <i class=\"el-icon-delete\"/>\r\n                </v-btn>\r\n              </div>\r\n            </v-card-text>\r\n          </v-card>\r\n          <v-card class=\"elevation-0\">\r\n            <!--标题-->\r\n            <div class=\"subheading py-3\">SKU列表:</div>\r\n            <v-divider/>\r\n            <!--SKU表格，hide-actions因此分页等工具条-->\r\n            <v-data-table :items=\"skus\" :headers=\"headers\" hide-actions item-key=\"indexes\" class=\"elevation-0\">\r\n              <template slot=\"items\" slot-scope=\"props\">\r\n                <tr @click=\"props.expanded = !props.expanded\">\r\n                  <!--价格和库存展示为文本框-->\r\n                  <td v-for=\"(v,k) in props.item\" :key=\"k\" v-if=\"['price', 'stock'].includes(k)\"\r\n                      class=\"text-xs-center\">\r\n                    <v-text-field single-line v-model=\"props.item[k]\" @click.stop=\"\"/>\r\n                  </td>\r\n                  <!--enable展示为checkbox-->\r\n                  <td class=\"text-xs-center\" v-else-if=\"k === 'enable'\">\r\n                    <v-checkbox v-model=\"props.item[k]\"/>\r\n                  </td>\r\n                  <!--indexes和images不展示，其它展示为普通文本-->\r\n                  <td class=\"text-xs-center\" v-else-if=\"k !== 'images' && k !== 'indexes'\">{{v.v}}</td>\r\n                </tr>\r\n              </template>\r\n              <!--点击表格后展开-->\r\n              <template slot=\"expand\" slot-scope=\"props\">\r\n                <v-card class=\"elevation-2 flex xs11 mx-auto my-2\">\r\n                  <!--图片上传组件-->\r\n                  <v-upload v-model=\"props.item.images\" url=\"/upload/signature\" needSignature/>\r\n                </v-card>\r\n              </template>\r\n            </v-data-table>\r\n          </v-card>\r\n        </v-flex>\r\n        <!--提交按钮-->\r\n        <v-flex xs3 offset-xs9>\r\n          <v-btn color=\"info\" @click=\"submit\">保存商品信息</v-btn>\r\n        </v-flex>\r\n      </v-stepper-content>\r\n    </v-stepper-items>\r\n  </v-stepper>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"goods-form\",\r\n  props: {\r\n    oldGoods: {\r\n      type: Object\r\n    },\r\n    isEdit: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    step: {\r\n      type: Number,\r\n      default: 1\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      valid:false,\r\n      goods: {\r\n        categories: [], // 商品分类信息\r\n        brandId: 0, // 品牌id信息\r\n        name: \"\", // 标题\r\n        subTitle: \"\", // 子标题\r\n        spuDetail: {\r\n          packingList: \"\", // 包装列表\r\n          afterService: \"\", // 售后服务\r\n          description: \"\" // 商品描述\r\n        }\r\n      },\r\n      brandOptions: [], // 品牌列表\r\n      specs: [], // 规格参数的模板\r\n      specialSpecs: [] // 特有规格参数模板\r\n    };\r\n  },\r\n  methods: {\r\n    submit() {\r\n      // 表单校验。\r\n      if(!this.$refs.basic.validate){\r\n        this.$message.error(\"请先完成表单内容！\");\r\n      }\r\n      // 先处理goods，用结构表达式接收,除了categories外，都接收到goodsParams中\r\n      const {\r\n        categories: [{ id: cid1 }, { id: cid2 }, { id: cid3 }],\r\n        ...goodsParams\r\n      } = this.goods;\r\n      // 处理规格参数\r\n      const specs = {};\r\n      this.specs.forEach(({ id,v }) => {\r\n        specs[id] = v;\r\n      });\r\n      // 处理特有规格参数模板\r\n      const specTemplate = {};\r\n      this.specialSpecs.forEach(({ id, options }) => {\r\n        specTemplate[id] = options;\r\n      });\r\n      // 处理sku\r\n      const skus = this.skus\r\n        .filter(s => s.enable)\r\n        .map(({ price, stock, enable, images, indexes, ...rest }) => {\r\n          // 标题，在spu的name基础上，拼接特有规格属性值\r\n          const title = goodsParams.name + \" \" + Object.values(rest).map(v => v.v).join(\" \");\r\n          const obj = {};\r\n          Object.values(rest).forEach(v => {\r\n            obj[v.id] = v.v;\r\n          });\r\n          return {\r\n            price: this.$format(price), // 价格需要格式化\r\n            stock,\r\n            indexes,\r\n            enable,\r\n            title, // 基本属性\r\n            images: images ? images.join(\",\") : '', // 图片\r\n            ownSpec: JSON.stringify(obj) // 特有规格参数\r\n          };\r\n        });\r\n      Object.assign(goodsParams, {\r\n        cid1,\r\n        cid2,\r\n        cid3, // 商品分类\r\n        skus // sku列表\r\n      });\r\n      goodsParams.spuDetail.genericSpec = JSON.stringify(specs);\r\n      goodsParams.spuDetail.specialSpec = JSON.stringify(specTemplate);\r\n      this.$http({\r\n        method: this.isEdit ? \"put\" : \"post\",\r\n        url: \"/item/goods\",\r\n        data: goodsParams\r\n      })\r\n        .then(() => {\r\n          // 成功，关闭窗口\r\n          this.$emit(\"close\");\r\n          // 提示成功\r\n          this.$message.success(\"保存成功了\");\r\n        })\r\n        .catch(() => {\r\n          this.$message.error(\"保存失败！\");\r\n        });\r\n    }\r\n  },\r\n  watch: {\r\n    oldGoods: {\r\n      deep: true,\r\n      handler(val) {\r\n        if (!this.isEdit) {\r\n          Object.assign(this.goods, {\r\n            categories: null, // 商品分类信息\r\n            brandId: 0, // 品牌id信息\r\n            name: \"\", // 标题\r\n            subTitle: \"\", // 子标题\r\n            spuDetail: {\r\n              packingList: \"\", // 包装列表\r\n              afterService: \"\", // 售后服务\r\n              description: \"\" // 商品描述\r\n            }\r\n          });\r\n          this.specs = [];\r\n          this.specialSpecs = [];\r\n        } else {\r\n          this.goods = Object.deepCopy(val);\r\n\r\n          // 先得到分类名称\r\n          const names = val.categoryName.split(\"/\");\r\n          delete this.goods.categoryName;\r\n          delete this.goods.brandName;\r\n          delete this.goods.createTime;\r\n          delete this.goods.saleable;\r\n          // 组织商品分类数据\r\n          this.goods.categories = [\r\n            { id: val.cid1, name: names[0] },\r\n            { id: val.cid2, name: names[1] },\r\n            { id: val.cid3, name: names[2] }\r\n          ];\r\n\r\n          // 将skus处理成map\r\n          const skuMap = new Map();\r\n          this.goods.skus.forEach(s => {\r\n            s.enable = true;\r\n            skuMap.set(s.indexes, s);\r\n          });\r\n          this.goods.skus = skuMap;\r\n        }\r\n      }\r\n    },\r\n    \"goods.categories\": {\r\n      deep: true,\r\n      handler(val) {\r\n        // 判断商品分类是否存在，存在才查询\r\n        if (val && val.length > 0) {\r\n          // 根据分类查询品牌\r\n          this.$http\r\n            .get(\"/item/brand/of/category?id=\" + this.goods.categories[2].id)\r\n            .then(({ data }) => {\r\n              this.brandOptions = data;\r\n            });\r\n          // 根据分类查询规格参数\r\n          this.$http\r\n            .get(\"/item/spec/params?cid=\" + this.goods.categories[2].id)\r\n            .then(({ data }) => {\r\n              let specs = [];\r\n              let template = [];\r\n              if (this.isEdit){\r\n                specs = JSON.parse(this.goods.spuDetail.genericSpec);\r\n                template = JSON.parse(this.goods.spuDetail.specialSpec);\r\n              }\r\n              // 对特有规格进行筛选\r\n              const arr1 = [];\r\n              const arr2 = [];\r\n              data.forEach(({id, name,generic, numeric, unit }) => {\r\n                if(generic){\r\n                  const o = { id, name, numeric, unit};\r\n                  if(this.isEdit){\r\n                    o.v = specs[id];\r\n                  }\r\n                  arr1.push(o)\r\n                }else{\r\n                  const o = {id, name, options:[]};\r\n                  if(this.isEdit){\r\n                    o.options = template[id];\r\n                  }\r\n                  arr2.push(o)\r\n                }\r\n              });\r\n              this.specs = arr1;// 通用规格\r\n              this.specialSpecs = arr2;// 特有规格\r\n            });\r\n        }\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    skus() {\r\n      // 过滤掉用户没有填写数据的规格参数\r\n      const arr = this.specialSpecs.filter(s => s.options.length > 0);\r\n      // 通过reduce进行累加笛卡尔积\r\n      return arr.reduce(\r\n        (last, spec, index) => {\r\n          const result = [];\r\n          last.forEach(o => {\r\n            spec.options.forEach((option, i) => {\r\n              const obj = JSON.parse(JSON.stringify(o));\r\n              obj[spec.name] = {v:option, id:spec.id};\r\n              obj.indexes = (obj.indexes || '') + '_' +  i\r\n              if (index === arr.length - 1) {\r\n                obj.indexes = obj.indexes.substring(1);\r\n                // 如果发现是最后一组，则添加价格、库存等字段\r\n                Object.assign(obj, {\r\n                  price: 0,\r\n                  stock: 0,\r\n                  enable: false,\r\n                  images: []\r\n                });\r\n                if (this.isEdit) {\r\n                  // 如果是编辑，则回填sku信息\r\n                  const sku = this.goods.skus.get(obj.indexes);\r\n                  if (sku != null) {\r\n                    const { price, stock, enable, images } = sku;\r\n                    Object.assign(obj, {\r\n                      price: this.$format(price),\r\n                      stock,\r\n                      enable,\r\n                      images: images ? images.split(\",\") : [],\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n              result.push(obj);\r\n            });\r\n          });\r\n          return result;\r\n        },\r\n        [{}]\r\n      );\r\n    },\r\n    headers() {\r\n      if (this.skus.length <= 0) {\r\n        return [];\r\n      }\r\n      const headers = [];\r\n      Object.keys(this.skus[0]).forEach(k => {\r\n        let value = k;\r\n        if (k === \"price\") {\r\n          // enable，表头要翻译成“价格”\r\n          k = \"价格\";\r\n        } else if (k === \"stock\") {\r\n          // enable，表头要翻译成“库存”\r\n          k = \"库存\";\r\n        } else if (k === \"enable\") {\r\n          // enable，表头要翻译成“是否启用”\r\n          k = \"是否启用\";\r\n        } else if (k === \"images\" || k === 'indexes') {\r\n          // 图片和索引不在表格中展示\r\n          return;\r\n        }\r\n        headers.push({\r\n          text: k,\r\n          align: \"center\",\r\n          sortable: false,\r\n          value\r\n        });\r\n      });\r\n      return headers;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"sourceRoot":"src/views/item"}]}