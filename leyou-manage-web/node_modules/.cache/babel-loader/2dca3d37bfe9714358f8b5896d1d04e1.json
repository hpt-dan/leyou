{"remainingRequest":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\babel-loader\\lib\\index.js!C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\develop\\idea-projects\\leyou-manage-web\\src\\components\\form\\Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\src\\components\\form\\Upload.vue","mtime":1552482654708},{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\develop\\\\idea-projects\\\\leyou-manage-web\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Upload } from 'element-ui';\nimport fileUtil from './fileUtil';\nexport default {\n  name: \"vUpload\",\n  components: {\n    elUpload: Upload\n  },\n  props: {\n    url: {\n      type: String,\n      require: false\n    },\n    value: {},\n    multiple: {\n      type: Boolean,\n      default: true\n    },\n    picWidth: {\n      type: Number,\n      default: 150\n    },\n    picHeight: {\n      type: Number,\n      default: 150\n    },\n    needSignature: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      showBtn: false,\n      show: false,\n      dialogImageUrl: \"\",\n      avatarStyle: {\n        width: this.picWidth + 'px',\n        height: this.picHeight + 'px',\n        'line-height': this.picHeight + 'px'\n      },\n      fileList: []\n    };\n  },\n  mounted: function mounted() {\n    if (!this.value || this.value.length <= 0) {\n      return;\n    }\n\n    if (this.multiple) {\n      this.fileList = this.value.map(function (f) {\n        return {\n          response: f,\n          url: f\n        };\n      });\n    } else {\n      this.dialogImageUrl = this.value;\n    }\n  },\n  watch: {\n    value: {\n      deep: true,\n      handler: function handler(val) {\n        if (typeof val === \"string\") {\n          this.dialogImageUrl = val;\n        }\n      }\n    }\n  },\n  methods: {\n    handleUpload: function () {\n      var _handleUpload = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(params) {\n        var _this = this;\n\n        var file, fileType, isImage, isLt2M, filename, uploadUrl, formData, resp;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                file = params.file;\n                fileType = file.type;\n                isImage = fileType.indexOf('image') !== -1;\n                isLt2M = file.size < 2 * 1024 * 1024;\n\n                if (isLt2M) {\n                  _context.next = 7;\n                  break;\n                }\n\n                this.$message.error('上传图片或视频大小不能超过 2MB!');\n                return _context.abrupt(\"return\");\n\n              case 7:\n                if (isImage) {\n                  _context.next = 10;\n                  break;\n                }\n\n                this.$message.error('请选择图片!');\n                return _context.abrupt(\"return\");\n\n              case 10:\n                // 准备文件名称\n                filename = file.name;\n                uploadUrl = this.url; // 准备上传表单\n\n                formData = new FormData(); // 判断上传到哪里\n\n                if (!this.needSignature) {\n                  _context.next = 27;\n                  break;\n                }\n\n                _context.next = 16;\n                return this.$http.loadData(this.url);\n\n              case 16:\n                resp = _context.sent;\n\n                if (!(resp.expire < new Date().getTime())) {\n                  _context.next = 20;\n                  break;\n                }\n\n                this.$message.error('请求超时!');\n                return _context.abrupt(\"return\");\n\n              case 20:\n                // 修改文件名为随机文件名\n                filename = fileUtil.getFileName(file.name, resp.dir); // 修改上传文件路径\n\n                uploadUrl = resp.host; // 准备请求参数\n\n                formData.append(\"key\", filename);\n                formData.append(\"policy\", resp.policy);\n                formData.append(\"OSSAccessKeyId\", resp.accessId);\n                formData.append(\"success_action_status\", '200');\n                formData.append(\"signature\", resp.signature);\n\n              case 27:\n                formData.append(\"file\", file);\n                this.$http.post(uploadUrl, formData, {\n                  headers: {\n                    'Content-Type': 'multipart/form-data'\n                  }\n                }).then(function (resp) {\n                  console.log(resp);\n\n                  if (resp.status == '200') {\n                    // 获取文件路径\n                    var fileUrl = resp.data || uploadUrl + \"/\" + filename; // 判断是多文件还是单文件\n\n                    if (!_this.multiple) {\n                      // 单文件，直接获取地址即可；\n                      _this.dialogImageUrl = fileUrl;\n\n                      _this.$emit(\"input\", fileUrl);\n                    } else {\n                      // 多文件，放到集合中\n                      var files = _this.$refs.multiUpload.uploadFiles;\n                      files[files.length - 1].response = fileUrl;\n                      _this.fileList = files;\n\n                      _this.$emit(\"input\", files.map(function (f) {\n                        return f.response;\n                      }));\n                    }\n                  } else {\n                    _this.$message.error('上传失败');\n                  }\n                }).catch(function (err) {\n                  this.$message.error('上传失败');\n                  console.log(err);\n                });\n\n              case 29:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleUpload(_x) {\n        return _handleUpload.apply(this, arguments);\n      }\n\n      return handleUpload;\n    }(),\n    handleRemove: function handleRemove(file, fileList) {\n      this.fileList = fileList;\n      this.$emit(\"input\", fileList.map(function (f) {\n        return f.response;\n      }));\n    },\n    handlePictureCardPreview: function handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.response;\n      this.show = true;\n    },\n    removeSingle: function removeSingle() {\n      this.dialogImageUrl = \"\";\n      this.$refs.singleUpload.clearFiles();\n    }\n  }\n};",{"version":3,"sources":["Upload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-upload v-if=\"multiple\"\n               action=\"\"\n               list-type=\"picture-card\"\n               :on-preview=\"handlePictureCardPreview\"\n               :on-remove=\"handleRemove\"\n               ref=\"multiUpload\"\n               :file-list=\"fileList\"\n               :http-request=\"handleUpload\"\n    >\n      <i class=\"el-icon-plus\"></i>\n    </el-upload>\n    <el-upload ref=\"singleUpload\" v-else\n               action=\"\"\n               :style=\"avatarStyle\"\n               class=\"logo-uploader\"\n               :show-file-list=\"false\"\n               :http-request=\"handleUpload\"\n    >\n      <div @mouseover=\"showBtn=true\" @mouseout=\"showBtn=false\">\n        <i @click.stop=\"removeSingle\" v-show=\"dialogImageUrl && showBtn\" class=\"el-icon-close remove-btn\"></i>\n        <img v-if=\"dialogImageUrl\" :src=\"dialogImageUrl\" :style=\"avatarStyle\">\n        <i v-else class=\"el-icon-plus logo-uploader-icon\" :style=\"avatarStyle\"></i>\n      </div>\n    </el-upload>\n    <v-dialog v-model=\"show\" max-width=\"500\">\n      <img width=\"500px\" :src=\"dialogImageUrl\" alt=\"\">\n    </v-dialog>\n  </div>\n</template>\n\n<script>\n  import {Upload} from 'element-ui';\n  import fileUtil from './fileUtil';\n\n\n  export default {\n    name: \"vUpload\",\n    components: {\n      elUpload: Upload\n    },\n    props: {\n      url: {\n        type: String,\n        require: false\n      },\n      value: {},\n      multiple: {\n        type: Boolean,\n        default: true\n      },\n      picWidth: {\n        type: Number,\n        default: 150\n      },\n      picHeight: {\n        type: Number,\n        default: 150\n      },\n      needSignature: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        showBtn: false,\n        show: false,\n        dialogImageUrl: \"\",\n        avatarStyle: {\n          width: this.picWidth + 'px',\n          height: this.picHeight + 'px',\n          'line-height': this.picHeight + 'px'\n        },\n        fileList: [],\n      }\n    },\n    mounted() {\n      if (!this.value || this.value.length <= 0) {\n        return;\n      }\n      if (this.multiple) {\n        this.fileList = this.value.map(f => {\n          return {response: f, url: f}\n        });\n      } else {\n        this.dialogImageUrl = this.value;\n      }\n    },\n    watch: {\n      value:{\n        deep: true,\n        handler(val){\n          if((typeof val) === \"string\"){\n            this.dialogImageUrl = val;\n          }\n        }\n      }\n    },\n    methods: {\n      async handleUpload(params) {\n        const file = params.file;\n        const fileType = file.type;\n        const isImage = fileType.indexOf('image') !== -1;\n\n        const isLt2M = file.size < 2 * 1024 * 1024;\n\n        if (!isLt2M) {\n          this.$message.error('上传图片或视频大小不能超过 2MB!');\n          return;\n        }\n\n        if (!isImage) {\n          this.$message.error('请选择图片!');\n          return;\n        }\n        // 准备文件名称\n        let filename = file.name;\n        let uploadUrl = this.url;\n        // 准备上传表单\n        const formData = new FormData();\n        // 判断上传到哪里\n        if (this.needSignature) {\n          // 上传到阿里，进行签名，把接收到的url作为签名接口地址\n          const resp = await this.$http.loadData(this.url);\n          // 判断接口返回的签名时间是否超时\n          if (resp.expire < new Date().getTime()) {\n            this.$message.error('请求超时!');\n            return;\n          }\n          // 修改文件名为随机文件名\n          filename = fileUtil.getFileName(file.name, resp.dir);\n          // 修改上传文件路径\n          uploadUrl = resp.host;\n          // 准备请求参数\n          formData.append(\"key\", filename);\n          formData.append(\"policy\", resp.policy);\n          formData.append(\"OSSAccessKeyId\", resp.accessId);\n          formData.append(\"success_action_status\", '200');\n          formData.append(\"signature\", resp.signature);\n        }\n        formData.append(\"file\", file);\n\n        this.$http.post(uploadUrl, formData, {headers: {'Content-Type': 'multipart/form-data'}})\n          .then(resp => {\n            console.log(resp);\n            if (resp.status == '200') {\n              // 获取文件路径\n              const fileUrl = resp.data || uploadUrl + \"/\" + filename;\n              // 判断是多文件还是单文件\n              if (!this.multiple) {\n                // 单文件，直接获取地址即可；\n                this.dialogImageUrl = fileUrl;\n                this.$emit(\"input\", fileUrl)\n              } else {\n                // 多文件，放到集合中\n                const files = this.$refs.multiUpload.uploadFiles;\n                files[files.length - 1].response = fileUrl;\n                this.fileList = files;\n                this.$emit(\"input\", files.map(f => f.response))\n              }\n            } else {\n              this.$message.error('上传失败');\n            }\n          }).catch(function (err) {\n          this.$message.error('上传失败');\n          console.log(err);\n        });\n      },\n      handleRemove(file, fileList) {\n        this.fileList = fileList;\n        this.$emit(\"input\", fileList.map(f => f.response))\n      },\n      handlePictureCardPreview(file) {\n        this.dialogImageUrl = file.response;\n        this.show = true;\n      },\n      removeSingle() {\n        this.dialogImageUrl = \"\";\n        this.$refs.singleUpload.clearFiles();\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .logo-uploader {\n    border: 1px dashed #d9d9d9;\n    border-radius: 6px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n    float: left;\n  }\n\n  .logo-uploader:hover {\n    border-color: #409EFF;\n  }\n\n  .logo-uploader-icon {\n    font-size: 28px;\n    color: #8c939d;\n    text-align: center;\n  }\n\n  .remove-btn {\n    position: absolute;\n    right: 0;\n    font-size: 16px;\n  }\n\n  .remove-btn:hover {\n    color: #c22;\n  }\n</style>\n"],"sourceRoot":"src/components/form"}]}