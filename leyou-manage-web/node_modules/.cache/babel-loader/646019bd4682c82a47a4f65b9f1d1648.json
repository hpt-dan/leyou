{"remainingRequest":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\babel-loader\\lib\\index.js!C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\develop\\idea-projects\\leyou-manage-web\\src\\views\\item\\Brand.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\src\\views\\item\\Brand.vue","mtime":1552990895289},{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 导入自定义的表单组件\nimport BrandForm from './BrandForm';\nexport default {\n  name: \"brand\",\n  data: function data() {\n    return {\n      search: '',\n      // 搜索过滤字段\n      totalBrands: 0,\n      // 总条数\n      brands: [],\n      // 当前页品牌数据\n      loading: true,\n      // 是否在加载中\n      pagination: {},\n      // 分页信息\n      headers: [{\n        text: 'id',\n        align: 'center',\n        value: 'id'\n      }, {\n        text: '名称',\n        align: 'center',\n        sortable: false,\n        value: 'name'\n      }, {\n        text: 'LOGO',\n        align: 'center',\n        sortable: false,\n        value: 'image'\n      }, {\n        text: '首字母',\n        align: 'center',\n        value: 'letter',\n        sortable: true\n      }, {\n        text: '操作',\n        align: 'center',\n        value: 'id',\n        sortable: false\n      }],\n      show: false,\n      // 控制对话框的显示\n      oldBrand: {},\n      // 即将被编辑的品牌数据\n      isEdit: false // 是否是编辑\n\n    };\n  },\n  mounted: function mounted() {\n    // 渲染后执行\n    // 查询数据\n    this.getDataFromServer();\n  },\n  watch: {\n    pagination: {\n      // 监视pagination属性的变化\n      deep: true,\n      // deep为true，会监视pagination的属性及属性中的对象属性变化\n      handler: function handler() {\n        // 变化后的回调函数，这里我们再次调用getDataFromServer即可\n        this.getDataFromServer();\n      }\n    },\n    search: {\n      // 监视搜索字段\n      handler: function handler() {\n        this.getDataFromServer();\n      }\n    }\n  },\n  methods: {\n    getDataFromServer: function getDataFromServer() {\n      var _this = this;\n\n      // 从服务的加载数的方法。\n      // 发起请求\n      this.$http.get(\"/item/brand/page\", {\n        params: {\n          key: this.search,\n          // 搜索条件\n          page: this.pagination.page,\n          // 当前页\n          rows: this.pagination.rowsPerPage,\n          // 每页大小\n          sortBy: this.pagination.sortBy,\n          // 排序字段\n          desc: this.pagination.descending // 是否降序\n\n        }\n      }).then(function (resp) {\n        // 这里使用箭头函数\n        _this.brands = resp.data.items;\n        _this.totalBrands = resp.data.total; // 完成赋值后，把加载状态赋值为false\n\n        _this.loading = false;\n      });\n    },\n    addBrand: function addBrand() {\n      // 修改标记\n      this.isEdit = false; // 控制弹窗可见：\n\n      this.show = true; // 把oldBrand变为null\n\n      this.oldBrand = null;\n    },\n    editBrand: function editBrand(oldBrand) {\n      var _this2 = this;\n\n      // 根据品牌信息查询商品分类\n      this.$http.get(\"/item/category/of/brand/?id=\" + oldBrand.id).then(function (_ref) {\n        var data = _ref.data;\n        // 修改标记\n        _this2.isEdit = true; // 控制弹窗可见：\n\n        _this2.show = true; // 获取要编辑的brand\n\n        _this2.oldBrand = oldBrand; // 回显商品分类\n\n        _this2.oldBrand.categories = data;\n      });\n    },\n    closeWindow: function closeWindow() {\n      // 重新加载数据\n      this.getDataFromServer(); // 关闭窗口\n\n      this.show = false;\n    }\n  },\n  components: {\n    BrandForm: BrandForm\n  }\n};",{"version":3,"sources":["Brand.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-card>\n    <v-card-title>\n      <v-btn color=\"primary\" @click=\"addBrand\">新增品牌</v-btn>\n      <!--搜索框，与search属性关联-->\n      <v-spacer/>\n      <v-flex xs3>\n      <v-text-field label=\"输入关键字搜索\" v-model.lazy=\"search\" append-icon=\"search\" hide-details/>\n      </v-flex>\n    </v-card-title>\n    <v-divider/>\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"brands\"\n      :pagination.sync=\"pagination\"\n      :total-items=\"totalBrands\"\n      :loading=\"loading\"\n      class=\"elevation-1\"\n    >\n      <template slot=\"items\" slot-scope=\"props\">\n        <td class=\"text-xs-center\">{{ props.item.id }}</td>\n        <td class=\"text-xs-center\">{{ props.item.name }}</td>\n        <td class=\"text-xs-center\">\n          <img v-if=\"props.item.image\" :src=\"props.item.image\" width=\"130\" height=\"40\">\n          <span v-else>无</span>\n        </td>\n        <td class=\"text-xs-center\">{{ props.item.letter }}</td>\n        <td class=\"justify-center layout px-0\">\n          <v-btn icon @click=\"editBrand(props.item)\">\n            <i class=\"el-icon-edit\"/>\n          </v-btn>\n          <v-btn icon @click=\"deleteBrand(props.item)\">\n            <i class=\"el-icon-delete\"/>\n          </v-btn>\n        </td>\n      </template>\n      <template v-slot:pageText=\"props\">\n        当前 {{ props.pageStart }} - {{ props.pageStop }} 共 {{ props.itemsLength }}条\n      </template>\n    </v-data-table>\n    <!--弹出的对话框-->\n    <v-dialog max-width=\"500\" v-model=\"show\" persistent scrollable>\n      <brand-form @close=\"closeWindow\" :oldBrand=\"oldBrand\" :isEdit=\"isEdit\"/>\n    </v-dialog>\n  </v-card>\n</template>\n\n<script>\n  // 导入自定义的表单组件\n  import BrandForm from './BrandForm'\n\n  export default {\n    name: \"brand\",\n    data() {\n      return {\n        search: '', // 搜索过滤字段\n        totalBrands: 0, // 总条数\n        brands: [], // 当前页品牌数据\n        loading: true, // 是否在加载中\n        pagination: {}, // 分页信息\n        headers: [\n          {text: 'id', align: 'center', value: 'id'},\n          {text: '名称', align: 'center', sortable: false, value: 'name'},\n          {text: 'LOGO', align: 'center', sortable: false, value: 'image'},\n          {text: '首字母', align: 'center', value: 'letter', sortable: true,},\n          {text: '操作', align: 'center', value: 'id', sortable: false}\n        ],\n        show: false,// 控制对话框的显示\n        oldBrand: {}, // 即将被编辑的品牌数据\n        isEdit: false, // 是否是编辑\n      }\n    },\n    mounted() { // 渲染后执行\n      // 查询数据\n      this.getDataFromServer();\n    },\n    watch: {\n      pagination: { // 监视pagination属性的变化\n        deep: true, // deep为true，会监视pagination的属性及属性中的对象属性变化\n        handler() {\n          // 变化后的回调函数，这里我们再次调用getDataFromServer即可\n          this.getDataFromServer();\n        }\n      },\n      search: { // 监视搜索字段\n        handler() {\n          this.getDataFromServer();\n        }\n      }\n    },\n    methods: {\n      getDataFromServer() { // 从服务的加载数的方法。\n        // 发起请求\n        this.$http.get(\"/item/brand/page\", {\n          params: {\n            key: this.search, // 搜索条件\n            page: this.pagination.page,// 当前页\n            rows: this.pagination.rowsPerPage,// 每页大小\n            sortBy: this.pagination.sortBy,// 排序字段\n            desc: this.pagination.descending// 是否降序\n          }\n        }).then(resp => { // 这里使用箭头函数\n          this.brands = resp.data.items;\n          this.totalBrands = resp.data.total;\n          // 完成赋值后，把加载状态赋值为false\n          this.loading = false;\n        })\n      },\n      addBrand() {\n        // 修改标记\n        this.isEdit = false;\n        // 控制弹窗可见：\n        this.show = true;\n        // 把oldBrand变为null\n        this.oldBrand = null;\n      },\n      editBrand(oldBrand){\n        // 根据品牌信息查询商品分类\n        this.$http.get(\"/item/category/of/brand/?id=\"+oldBrand.id)\n          .then(({data}) => {\n            // 修改标记\n            this.isEdit = true;\n            // 控制弹窗可见：\n            this.show = true;\n            // 获取要编辑的brand\n            this.oldBrand = oldBrand\n            // 回显商品分类\n            this.oldBrand.categories = data;\n          })\n      },\n      closeWindow(){\n        // 重新加载数据\n        this.getDataFromServer();\n        // 关闭窗口\n        this.show = false;\n      }\n    },\n    components:{\n        BrandForm\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/views/item"}]}