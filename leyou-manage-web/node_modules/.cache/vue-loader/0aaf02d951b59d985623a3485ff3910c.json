{"remainingRequest":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\develop\\idea-projects\\leyou-manage-web\\src\\views\\item\\specification\\Specification.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\src\\views\\item\\specification\\Specification.vue","mtime":1550570120333},{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\idea-projects\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n  name: \"v-spec\",\n  data() {\n    return {\n      currentNode: {}, // 当前被选中的商品分类节点\n      group:{}, // 被选中的分组\n      showGroup:true, // 是否展示分组\n    };\n  },\n  methods: {\n    // 分类点击后的弹窗\n    handleClick(node) {\n      // 判断点击的节点是否是父节点（只有点击到叶子节点才会展示规格）\n      if (!node.isParent) {\n        // 把当前点击的节点记录下来\n        this.currentNode = node;\n        // 显示规格组\n        this.showGroup = true;\n        // 记录选中的规格组，默认为空\n        this.group = {};\n      }\n    },\n    selectGroup(group){\n      // 记录选中的分组\n      this.group = group;\n      // 不再显示分组，而是显示规格参数\n      this.showGroup = false;\n    },\n    back(){\n        this.showGroup = true;\n        this.group = {};\n    }\n  },\n  components:{\n      SpecGroup: () => import('./SpecGroup.vue'),\n      SpecParam: () => import('./SpecParam.vue'),\n  },\n  computed:{\n      items(){\n          const items = this.currentNode.path;\n          if(this.group.name){\n              items[3] = this.group.name;\n          }\n          return items;\n      }\n  }\n};\n",{"version":3,"sources":["Specification.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Specification.vue","sourceRoot":"src/views/item/specification","sourcesContent":["<template>\n  <v-card>\n      <v-layout row>\n        <!-- 商品分类 -->\n        <v-flex xs3>\n          <v-card>\n            <v-card-title>选择分类，查看规格参数模板：</v-card-title>\n            <v-divider/>\n              <v-tree url=\"/item/category/list\"\n                  @handleClick=\"handleClick\"\n          />\n          </v-card>\n        </v-flex>\n        <!-- 规格参数 -->\n        <v-flex xs9 class=\"px-1\">\n          <v-card class=\"elevation-0\" v-show=\"currentNode.id\">\n              <v-card-title v-if=\"!currentNode.path\">\n                请先选择一个分类\n              </v-card-title>         \n            <v-breadcrumbs dense v-else>\n                <v-icon slot=\"divider\">chevron_right</v-icon>\n                <v-breadcrumbs-item\n                    v-for=\"(item,i) in items\"\n                    :key=\"i\"\n                >\n                    <span v-if=\"i === 2\" @click=\"back\">{{ item }}</span>\n                    <span v-else>{{ item }}</span>\n                </v-breadcrumbs-item>\n            </v-breadcrumbs>\n            <v-divider/>\n            <v-card-text>\n              <spec-group :cid=\"currentNode.id\" v-show=\"showGroup\" @select=\"selectGroup\"/>\n              <spec-param :group=\"group\" v-show=\"!showGroup\" />\n            </v-card-text>\n          </v-card>\n        </v-flex>\n      </v-layout>\n  </v-card>\n</template>\n\n<script>\n\nexport default {\n  name: \"v-spec\",\n  data() {\n    return {\n      currentNode: {}, // 当前被选中的商品分类节点\n      group:{}, // 被选中的分组\n      showGroup:true, // 是否展示分组\n    };\n  },\n  methods: {\n    // 分类点击后的弹窗\n    handleClick(node) {\n      // 判断点击的节点是否是父节点（只有点击到叶子节点才会展示规格）\n      if (!node.isParent) {\n        // 把当前点击的节点记录下来\n        this.currentNode = node;\n        // 显示规格组\n        this.showGroup = true;\n        // 记录选中的规格组，默认为空\n        this.group = {};\n      }\n    },\n    selectGroup(group){\n      // 记录选中的分组\n      this.group = group;\n      // 不再显示分组，而是显示规格参数\n      this.showGroup = false;\n    },\n    back(){\n        this.showGroup = true;\n        this.group = {};\n    }\n  },\n  components:{\n      SpecGroup: () => import('./SpecGroup.vue'),\n      SpecParam: () => import('./SpecParam.vue'),\n  },\n  computed:{\n      items(){\n          const items = this.currentNode.path;\n          if(this.group.name){\n              items[3] = this.group.name;\n          }\n          return items;\n      }\n  }\n};\n</script>\n\n<style scoped>\n</style>\n"]}]}